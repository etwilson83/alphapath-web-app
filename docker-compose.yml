version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: azd-postgres
    environment:
      POSTGRES_DB: research_app
      POSTGRES_USER: developer
      POSTGRES_PASSWORD: developer123
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U developer -d research_app"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  # Go Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: azd-backend
    environment:
      PORT: 8080
      DATABASE_URL: postgres://developer:developer123@postgres:5432/research_app?sslmode=disable
      ENVIRONMENT: development
      LOG_LEVEL: debug
    ports:
      - "8080:8080"
    volumes:
      - ./backend:/app
      - /app/tmp  # Anonymous volume for tmp files
    depends_on:
      postgres:
        condition: service_healthy
    develop:
      watch:
        - action: rebuild
          path: ./backend/go.mod
        - action: rebuild
          path: ./backend/go.sum
        - action: sync
          path: ./backend
          target: /app
    networks:
      - app-network
    restart: unless-stopped

  # Vue.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: azd-frontend
    environment:
      VITE_API_URL: http://localhost:8080
      NODE_ENV: development
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules  # Anonymous volume for node_modules
    develop:
      watch:
        - action: sync
          path: ./frontend/src
          target: /app/src
        - action: sync
          path: ./frontend/public
          target: /app/public
        - action: rebuild
          path: ./frontend/package.json
    networks:
      - app-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  app-network:
    driver: bridge 